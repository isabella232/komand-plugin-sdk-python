#!/usr/bin/env python
# GENERATED BY KOMAND SDK - DO NOT EDIT
import os
import json
from sys import argv

Name = "Example Plugin"
Vendor = "rapid7"
Version = "1.0.0"
Description = "Example plugin for testing"


def main():
    # If the worker is configured to run as gevent class
    #  we need to override default python behavior with the one defined in gevent.
    #  It can be achieved by monkey patching the default python implementation of
    #  Python runtime objects( threads/signals/sockets) with the one implemented by gevent.
    #  Ideally, we don't have to do it, and gevent workers should be able to monkey patch implicitly.
    #  However, we are also monkey patching the certifi package,
    #  and it may cause infinite recursion problem as described in https://github.com/gevent/gevent/issues/1016.
    #  To avoid the infinite recursion, we first monkey patching with gevent
    #  and only then importing the rest of the dependencies. It only has to be done
    #  if the plugin is running in Server mode(http).
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    # import the rest of the dependencies
    import insightconnect_plugin_runtime
    from icon_example import connection, actions, triggers

    class ICONExample(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection(),
            )
            self.add_trigger(triggers.EmitGreeting())

            self.add_action(actions.SayGoodbye())

            self.add_action(actions.SayHello())

        """Run plugin"""

    cli = insightconnect_plugin_runtime.CLI(ICONExample())
    cli.run()


if __name__ == "__main__":
    main()
